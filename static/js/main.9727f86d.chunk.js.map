{"version":3,"sources":["components/sideMenu.js","components/siteHeader.js","components/pages/sketchPage.js","components/sketchWrapper/sketchConfigElements/rangeSlider.js","components/sketchWrapper/sketchConfigPanel.js","globals/payloadFieldTypes.js","components/sketchWrapper/canvasSketchWrapper.js","components/pages/aboutPage.js","renderers/examples/simpleGrid.js","renderers/examples/randomGrid.js","renderers/examples/randomColorSizeGrid.js","renderers/examples/randomKonamiGrid.js","renderers/examples/randomGridPainting.js","renderers/experiments/sentenceGrid.js","renderers/experiments/generativeWallDrawing.js","playgroundContent.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","drawer","width","flexShrink","drawerPaper","toolbar","mixins","SideMenu","_ref","open","headSections","examples","experiments","selected","onSelect","onOverlayClick","classes","getMenuItem","title","key","react_default","a","createElement","ListItem","onClick","button","ListItemText","primary","Drawer","className","anchor","paper","onClose","List","map","_ref2","index","Divider","ListSubheader","component","_ref3","filename","_ref4","appBar","zIndex","SiteHeader","onMenuIconClick","AppBar","position","Toolbar","IconButton","edge","menuButton","color","aria-label","Menu_default","Typography","variant","noWrap","Chip","size","label","root","display","link","margin","spacing","SketchPage","sketchMeta","value","handleTabChange","renderer","settings","showRefresh","fileName","payload","payloadSchema","Date","now","Paper","Tabs","onChange","indicatorColor","textColor","centered","Tab","icon","Visibility","Code","style","padding","marginTop","background","React","showRefreshButton","main_default","language","toString","RangeSlider","onFieldValueChange","originalPayload","uiControlMeta","defaultValue","field","min","max","step","Fragment","id","gutterBottom","Slider","valueLabelDisplay","aria-labelledby","onChangeCommitted","evt","marks","marginBottom","tuneIcon","marginRight","uiControlsContainer","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","createConfigUIElements","sketchConfiPanelgMeta","sketchPayload","length","uiController","idx","uiElement","type","rangeSlider","SketchConfigPanel","uiControls","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","aria-controls","Tune","ExpansionPanelDetails","defaultSettings","dimensions","fab","top","left","extendedIcon","CanvasSketchWrapper","_ref$settings","_ref$showRefreshButto","_ref$payload","_ref$payloadSchema","refCanvas","useRef","_useState","useState","_useState2","Object","slicedToArray","updateCount","setUpdateCount","_useState3","objectSpread","_useState4","nextPayload","setNextPayload","_useState5","_useState6","temporaryPayload","setTemporaryPayload","useEffect","canvasSketch","canvas","current","showConfigPanel","textAlign","sketchConfigPanel","fieldKey","nextValue","defineProperty","Tooltip","Fab","arguments","undefined","redraw","Loop","ref","maxWidth","section","paddingTop","getLink","url","clsName","text","Link","target","rel","href","AboutPage","lerp","require","simpleGridSketchMeta","context","height","points","x","y","u","v","push","createGrid","fillStyle","fillRect","forEach","beginPath","arc","Math","PI","strokeStyle","lineWidth","stroke","randomGridSketchMeta","gridSize","count","tileSize","filter","random","fill","palettes","randomColorSizeGridSketchMeta","palette","pick","shuffle","slice","rangeFloor","shift","radius","abs","gaussian","data","randomKonamiGridSketchMeta","asyncToGenerator","regenerator_default","mark","_callee","characters","font","wrap","_context","prev","next","split","character","r","test","e","chance","window","FontFace","concat","process","load","document","fonts","add","textBaseline","fillText","stop","_x","apply","this","randomGridPaintingSketchMeta","maxColors","grid","frequency","range","_random$insideSphere","insideSphere","_random$insideSphere2","n","noise2D","baseSize","sizeOffset","rotation","_position","save","translate","rotate","globalAlpha","restore","sentenceGridSketchMeta","sentence","chars","_palette","_palette2","bgColor","pointColor","arcColor","radians","toUpperCase","ceil","sqrt","degrees","startingAngle","setSeed","getRandomSeed","generativeWallDrawingSketchMeta","tuples","result","shuffled","t","splice","avg","tuple","createTuples","sort","b","_tuple$","u0","v0","_tuple$2","u1","v1","x0","y0","x1","y1","moveTo","lineTo","closePath","content","flexGrow","App","selectedSection","setSelectedSection","_React$useState","_React$useState2","selectedIndex","setSelectedIndex","_React$useState3","_React$useState4","drawerOpen","setDrawerOpen","event","newValue","CssBaseline","siteHeader","sideMenu","sketchPage","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9727f86d.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Drawer,\n  List,\n  Divider,\n  ListItem,\n  ListItemText, ListSubheader\n} from '@material-ui/core';\n\nconst drawerWidth = 200;\n\n// TODO use responsive drawer\nfunction SideMenu({ open, headSections, examples, experiments, selected, onSelect, onOverlayClick }) {\n\n  const classes = useStyles();\n\n  const getMenuItem = (title, key, selected) => (\n    <ListItem selected={ title === selected }\n      onClick={ () => onSelect(title) }  button key={key}>\n      <ListItemText primary={title} />\n    </ListItem>\n  );\n\n  return (\n    <Drawer\n      className={classes.drawer}\n      anchor=\"left\"\n      open={open}\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n      onClose={onOverlayClick}\n    >\n      <List>\n        {headSections.map(({ title }, index) => getMenuItem(title, index, selected))}\n      </List>\n\n      <Divider />\n      <ListSubheader component=\"div\">\n        Course examples\n      </ListSubheader>\n      <Divider />\n\n      <List>\n        {examples.map(({ title, filename }, index) => getMenuItem(title, index, selected))}\n      </List>\n\n      <Divider />\n      <ListSubheader component=\"div\">\n        Experiments\n      </ListSubheader>\n      <Divider />\n\n      <List>\n        {experiments.map(({ title, filename }, index) => getMenuItem(title, index, selected))}\n      </List>\n\n    </Drawer>\n  );\n}\n\n\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  toolbar: theme.mixins.toolbar,\n}));\n\n\nexport default SideMenu;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Chip,\n  IconButton\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\n\n\nfunction SiteHeader({ title, onMenuIconClick }) {\n\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar>\n        <IconButton onClick={onMenuIconClick} edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n          <MenuIcon />\n        </IconButton>\n        <Typography variant=\"h6\" noWrap>\n        { title }  <Chip color=\"secondary\" size=\"small\" label=\"alpha\" />\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n}));\n\nexport default SiteHeader;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Highlight from 'react-highlight.js';\n\nimport { Code, Visibility } from '@material-ui/icons';\n\nimport {\n  Paper,\n  Tabs,\n  Tab,\n  Typography,\n  Link\n} from '@material-ui/core';\n\nfunction SketchPage({ sketchMeta, value, handleTabChange }) {\n  const {\n    component, renderer, settings, fileName, showRefresh, payload, payloadSchema,\n  } = sketchMeta;\n\n  const classes = useStyles();\n  return (\n    <div key={Date.now()}>\n\n      <Paper className={classes.root}>\n       <Tabs\n         value={value}\n         onChange={handleTabChange}\n         indicatorColor=\"primary\"\n         textColor=\"primary\"\n         centered\n       >\n          <Tab icon={<Visibility />} aria-label=\"View\"  label=\"Sketch\"/>\n          <Tab icon={<Code />} aria-label=\"Code\"  label=\"Code\"/>\n\n       </Tabs>\n     </Paper>\n\n\n     {value === 0 &&\n       <div style={{ padding: 25, marginTop: 10, background: 'white' }}>\n        {React.createElement(component, {\n             renderer,\n             settings,\n             showRefreshButton: showRefresh,\n             payload,\n             payloadSchema,\n         })}\n      </div>\n     }\n     {value === 1 &&\n       <div style={{ padding: 25, marginTop: 10, background: 'white' }}>\n        <Highlight language={'javascript'}>\n          {renderer.toString()}\n        </Highlight>\n        {false && <Typography>\n           <Link target=\"_blank\" rel=\"noopener\" href={`//TODO/${fileName}`} className={classes.link}>\n             View this file on GitHub\n           </Link>\n       </Typography>}\n       </div>\n     }\n\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  link: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default SketchPage;\n","import React from 'react';\nimport {\n  Typography,\n  Slider,\n} from '@material-ui/core';\n\nfunction RangeSlider({\n  onFieldValueChange,\n  originalPayload,\n  uiControlMeta,\n}) {\n  const {\n    label,\n    defaultValue,\n    field,\n    min,\n    max,\n    step\n  } = uiControlMeta;\n  const value = (originalPayload[field] || defaultValue);\n  const onSliderChange = (evt, value) => {\n    onFieldValueChange(field, value)\n  };\n\n  return (<>\n    <Typography id=\"discrete-slider\" gutterBottom>\n      { label }\n    </Typography>\n    <Slider\n      valueLabelDisplay=\"on\"\n      defaultValue={ value }\n      aria-labelledby=\"discrete-slider\"\n      step={ step }\n      onChangeCommitted={onSliderChange}\n      marks\n      min={ min }\n      max={ max }\n    />\n  </>)\n}\n\nexport default RangeSlider;\n","import React from 'react';\nimport {\n  makeStyles,\n  Typography,\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails\n} from '@material-ui/core';\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { Tune } from '@material-ui/icons';\nimport { NUMERIC_RANGE } from '../../globals/payloadFieldTypes';\nimport RangeSlider from './sketchConfigElements/rangeSlider';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginBottom: 40,\n    marginTop: 0,\n  },\n  tuneIcon: {\n    marginRight: theme.spacing(1),\n  },\n  uiControlsContainer: {\n    width: '100%'\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nconst createConfigUIElements = (sketchConfiPanelgMeta, sketchPayload, onFieldValueChange) => {\n  return (sketchConfiPanelgMeta && sketchConfiPanelgMeta.length > 0) ?\n    sketchConfiPanelgMeta.map((uiController, idx) => {\n      let uiElement = null;\n      switch(uiController.type) {\n        case NUMERIC_RANGE:\n          uiElement = (<div key={idx} style={{ width: '100%'}}>\n            <RangeSlider\n              onFieldValueChange={onFieldValueChange}\n              uiControlMeta={uiController}\n              originalPayload={sketchPayload}\n            />\n          </div>);\n          break;\n        default:\n          uiElement = null;\n          break;\n      }\n      return uiElement;\n    }) : [];\n}\n\nfunction SketchConfigPanel({\n  sketchPayload,\n  sketchConfiPanelgMeta,\n  onFieldValueChange\n}) {\n\n  const classes = useStyles();\n  const uiControls = createConfigUIElements(sketchConfiPanelgMeta, sketchPayload, onFieldValueChange);\n\n  return (\n    <ExpansionPanel className={classes.root}>\n      <ExpansionPanelSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n      <Tune fontSize=\"small\" className={classes.tuneIcon}/>\n        <Typography className={classes.heading}>Parameters</Typography>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails>\n        <div className={classes.uiControlsContainer}>\n          { uiControls }\n        </div>\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  );\n}\n\nexport default SketchConfigPanel;\n","export const NUMERIC_RANGE = 'NUMERIC_RANGE'\n","import React, { useEffect, useState, useRef } from 'react';\nimport { makeStyles, Fab, Tooltip } from '@material-ui/core';\nimport { Loop } from '@material-ui/icons';\nimport canvasSketch from 'canvas-sketch';\nimport SketchConfigPanel from './sketchConfigPanel';\n\nconst defaultSettings = {\n  dimensions: [ 2048, 2048 ],\n};\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    position: 'absolute',\n    top: -15,\n    left: -15,\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nfunction CanvasSketchWrapper({\n  renderer,\n  settings = defaultSettings,\n  // TODO make panel config view only if false?\n  showRefreshButton = false,\n  payload = null,\n  payloadSchema = null,\n}) {\n\n  const classes = useStyles();\n  const refCanvas = useRef(null);\n  const [updateCount, setUpdateCount] = useState(0);\n  const [nextPayload, setNextPayload] = useState(payload ? {...payload} : {});\n  const [temporaryPayload, setTemporaryPayload] = useState(nextPayload);\n\n  useEffect(() => {\n    const sketch = () => renderer(nextPayload);\n    canvasSketch(sketch, {\n      ...settings,\n      canvas: refCanvas.current\n    } );\n  }, [ renderer, settings, updateCount, nextPayload ]);\n\n  const redraw = (useUpdatedPayload = false) => {\n    useUpdatedPayload && setNextPayload(temporaryPayload)\n    setUpdateCount(updateCount + 1)\n  };\n  const onFieldValueChange = (fieldKey, nextValue) => {\n    setTemporaryPayload({...payload, [fieldKey]:nextValue})\n  }\n  const showConfigPanel = payloadSchema && payloadSchema.length > 0;\n\n  return (\n    <>\n      <div className=\"canvas-sketch-wrapper\">\n\n        <div style={{ textAlign: 'center', position: 'relative' }}>\n\n          {showConfigPanel &&\n          <SketchConfigPanel\n            sketchPayload={payload}\n            sketchConfiPanelgMeta={payloadSchema}\n            onFieldValueChange={onFieldValueChange}\n          />}\n\n          {showRefreshButton &&\n          <Tooltip title=\"Redraw sketch\" aria-label=\"add\">\n            <Fab size=\"small\" onClick={() => redraw(showConfigPanel) } aria-label=\"Reload\"\n              className={classes.fab} color='secondary'>\n              <Loop title=\"Redraw\"/>\n            </Fab>\n          </Tooltip>}\n\n          <canvas ref={refCanvas} />\n        </div>\n\n      </div>\n    </>\n  );\n}\n\nexport default CanvasSketchWrapper;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  Typography,\n  Link\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 500,\n  },\n  section: {\n    paddingTop: theme.spacing(2), // = 8 * 2\n  },\n  link: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst getLink = (url, clsName, text) => <Link target=\"_blank\" rel=\"noopener\" href={url} className={clsName}>{text}</Link>\n\nfunction AboutPage(key) {\n  const classes = useStyles();\n  return (\n    <div  key={key} className={classes.root}>\n      <Typography variant=\"h5\" gutterBottom>\n        <b>About</b>\n      </Typography>\n      <Typography className={classes.section}  variant=\"body1\" gutterBottom>\n        \"Creative Coding Playground\" is a page I am developing in my free time as a learning tool for the {getLink('https://frontendmasters.com/courses/canvas-webgl/', classes.link, 'Creative Coding with Canvas & WebGL')}\n        course by {getLink('https://github.com/mattdesl', classes.link, 'Matt DesLauriers')} on Frontend Masters\n      </Typography>\n\n      <br/>\n\n      <Typography variant=\"h6\" gutterBottom>\n        <b>Spaghetti code warning!</b>\n      </Typography>\n      <Typography className={classes.section}  variant=\"body1\" gutterBottom>\n        This is a <b>work-in-progress proof of concept</b> and it's not meant, for now, to be a reference on any topic in any way - JS, React, canvas, project structure, etc.\n        If you are still curious, you can check the code on {getLink('https://github.com/danilorossi/creative-coding-playground', classes.link, 'GitHub')}\n      </Typography>\n\n      <br/>\n\n      <Typography variant=\"subtitle1\" gutterBottom>\n        Feel free to say hello anytime! {getLink('http://danilorossi.me', classes.link, 'http://danilorossi.me')}\n      </Typography>\n    </div>\n  )\n}\n\nexport default AboutPage;\n","const { lerp } = require('canvas-sketch-util/math');\n\nconst simpleGrid = (payload) => ({ context, width, height }) => {\n\n  const count = 8;\n\n  const createGrid = () => {\n   const points = [];\n   for (let x = 0; x < count; x++) {\n     for (let y = 0; y < count; y++) {\n       const u = x / (count - 1);\n       const v = y / (count - 1);\n       points.push([ u, v ]);\n     }\n   }\n   return points;\n  };\n\n  const points = createGrid();\n\n  const margin = width * 0.175;\n\n  context.fillStyle = 'white';\n  context.fillRect(0, 0, width, height);\n\n  points.forEach(([ u, v ]) => {\n    const x = lerp(margin, width - margin, u);\n    const y = lerp(margin, height - margin, v);\n\n    context.beginPath();\n    context.arc(x, y, 40, 0, Math.PI * 2);\n    context.strokeStyle = 'black';\n    context.lineWidth = 20;\n    context.stroke();\n  });\n};\n\nexport const simpleGridSketchMeta = {\n  title: 'Simple Grid',\n  fileName: 'simpleGrid.js',\n  renderer: simpleGrid,\n  showRefresh: false,\n};\n","\nimport { NUMERIC_RANGE } from '../../globals/payloadFieldTypes';\n\nconst { lerp } = require('canvas-sketch-util/math');\n\nconst randomGrid = ({ gridSize }) => ({ context, width, height }) => {\n\n  const count = gridSize;\n  const margin = width * 0.15;\n  const padding = 20;\n  const tileSize = (width - margin * 2) / count - padding;\n\n  const createGrid = () => {\n    const points = [];\n    for (let x = 0; x < count; x++) {\n      for (let y = 0; y < count; y++) {\n        const u = x / (count - 1);\n        const v = y / (count - 1);\n        points.push([ u, v ]);\n      }\n    }\n    return points;\n  };\n  const points = createGrid().filter(() => Math.random() > 0.5);\n\n  context.fillStyle = '#cc8080';\n    context.fillRect(0, 0, width, height);\n\n    points.forEach(([ u, v ]) => {\n      const x = lerp(margin, width - margin, u);\n      const y = lerp(margin, height - margin, v);\n\n      context.beginPath();\n      context.arc(x, y, tileSize * 0.5, 0, Math.PI * 2);\n      context.fillStyle = '#fff';\n      context.fill();\n    });\n};\n\nexport const randomGridSketchMeta = {\n  title: 'Random Grid',\n  fileName: 'randomGrid.js',\n  renderer: randomGrid,\n  showRefresh: true,\n  payload: {\n    gridSize: 40\n  },\n  payloadSchema: [{\n    field: 'gridSize',\n    label: 'Grid size',\n    defaultValue: 40,\n    type: NUMERIC_RANGE,\n    min: 4,\n    max: 60,\n    step: 5\n  }]\n};\n","const { lerp } = require('canvas-sketch-util/math');\nconst palettes = require('nice-color-palettes/1000.json');\nconst random = require('canvas-sketch-util/random');\n\nconst randomColorSizeGrid = (payload) => ({ context, width, height }) => {\n  let palette = random.pick(palettes);\n  palette = random.shuffle(palette);\n  palette = palette.slice(0, random.rangeFloor(2, palette.length + 1));\n\n  const background = palette.shift();\n\n  const count = 30;\n\n  const createGrid = () => {\n    const points = [];\n    for (let x = 0; x < count; x++) {\n      for (let y = 0; y < count; y++) {\n        const u = x / (count - 1);\n        const v = y / (count - 1);\n        const position = [ u, v ];\n        points.push({\n          color: random.pick(palette),\n          radius: Math.abs(30 + 20 * random.gaussian()),\n          position\n        });\n      }\n    }\n    return points;\n  };\n\n  let points = createGrid().filter(() => {\n    return Math.random() > 0.75;\n  });\n\n  points = random.shuffle(points);\n\n  const margin = width * 0.175;\n\n  context.fillStyle = background;\n  context.fillRect(0, 0, width, height);\n\n  points.forEach(data => {\n    const {\n      position,\n      radius,\n      color\n    } = data;\n    const x = lerp(margin, width - margin, position[0]);\n    const y = lerp(margin, height - margin, position[1]);\n\n    context.beginPath();\n    context.arc(x, y, radius, 0, Math.PI * 2);\n    context.fillStyle = color;\n    context.fill();\n  });\n};\n\nexport const randomColorSizeGridSketchMeta = {\n  title: 'Random Color & Size Grid',\n  fileName: 'randomColorSizeGrid.js',\n  renderer: randomColorSizeGrid,\n  showRefresh: true\n};\n","const { lerp } = require('canvas-sketch-util/math');\nconst random = require('canvas-sketch-util/random');\n\nconst randomKonamiGrid = (payload) => async ({ context, width, height }) => {\n\n  const count = 20;\n  const characters = '←↑→↓AB'.split('');\n  const background = 'hsl(0, 0%, 96%)';\n  const palette = ['hsl(0, 0%, 10%)'];\n\n  const createGrid = () => {\n    const points = [];\n    for (let x = 0; x < count; x++) {\n      for (let y = 0; y < count; y++) {\n        const u = x / (count - 1);\n        const v = y / (count - 1);\n        const position = [ u, v ];\n        const character = random.pick(characters);\n        const r = /[AB]/i.test(character) ? 25 : 50;\n        const e = /[AB]/i.test(character) ? 10 : 20;\n        points.push({\n          color: random.pick(palette),\n          radius: Math.abs(r + e * random.gaussian()),\n          position,\n          character\n        });\n      }\n    }\n    return points;\n  };\n\n  let points = createGrid().filter(() => random.chance(0.5));\n\n  const fontUrl = process.env.PUBLIC_URL + '/assets/fonts/SpaceGrotesk-Medium.woff';\n  const font = new window.FontFace(\n    'SpaceGrotesk-Medium',\n    `url(\"${fontUrl}\")`\n  );\n\n   await font.load();\n   document.fonts.add(font);\n\n  const margin = width * 0.175;\n\n      context.fillStyle = background;\n      context.fillRect(0, 0, width, height);\n\n      points.forEach(data => {\n        const {\n          position,\n          radius,\n          color,\n          character\n        } = data;\n        const x = lerp(margin, width - margin, position[0]);\n        const y = lerp(margin, height - margin, position[1]);\n\n        // Draw the character\n        context.fillStyle = color;\n        context.font = `${radius}px \"SpaceGrotesk-Medium\"`;\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillText(character, x, y);\n      });\n};\n\nexport const randomKonamiGridSketchMeta = {\n  title: 'Random Konami Grid',\n  fileName: 'randomKonamiGrid.js',\n  renderer: randomKonamiGrid,\n  showRefresh: true\n};\n","const { lerp } = require('canvas-sketch-util/math');\nconst palettes = require('nice-color-palettes/1000.json');\nconst random = require('canvas-sketch-util/random');\n\nconst randomGridPainting = (payload) => async ({ context, width, height }) => {\n\n  const count = 60;\n  const margin = width * 0.15;\n  const maxColors = random.rangeFloor(2, 6);\n  const fontFamily = '\"Andale Mono\"';\n  const palette = random.shuffle(random.pick(palettes)).slice(0, maxColors);\n  const background = 'hsl(0, 0%, 94%)';\n  const characters = '=.'.split('');\n\n  const createGrid = () => {\n    const points = [];\n    const frequency = random.range(0.75, 1.25);\n\n    for (let x = 0; x < count; x++) {\n      for (let y = 0; y < count; y++) {\n        let u = x / (count - 1);\n        let v = y / (count - 1);\n\n        const [ dx, dy ] = random.insideSphere(0.05);\n        u += dx;\n        v += dy;\n\n        const n = random.noise2D(u * frequency, v * frequency);\n        const size = n * 0.5 + 0.5;\n        const baseSize = width * 0.05;\n        const sizeOffset = width * 0.1;\n\n        points.push({\n          color: random.pick(palette),\n          size: Math.abs(baseSize * size + random.gaussian() * sizeOffset),\n          rotation: n * Math.PI * 0.5,\n          character: random.pick(characters),\n          position: [ u, v ]\n        });\n      }\n    }\n    return points;\n  };\n\n  const grid = createGrid().filter(() => random.chance(0.5));\n\n\n  context.fillStyle = background;\n    context.fillRect(0, 0, width, height);\n\n    grid.forEach(({ position, rotation, size, color, character }) => {\n      const [ u, v ] = position;\n      const x = lerp(margin, width - margin, u);\n      const y = lerp(margin, height - margin, v);\n      context.fillStyle = context.strokeStyle = color;\n      context.textAlign = 'center';\n      context.textBaseline = 'middle';\n      context.font = `${size}px ${fontFamily}`;\n\n      context.save();\n      context.translate(x, y);\n      context.rotate(rotation);\n      context.globalAlpha = 0.85;\n      context.fillText(character, 0, 0);\n      context.restore();\n    });\n};\n\nexport const randomGridPaintingSketchMeta = {\n  title: 'Random Grid Painting',\n  fileName: 'randomGridPainting.js',\n  renderer: randomGridPainting,\n  showRefresh: true\n};\n","const { lerp } = require('canvas-sketch-util/math');\nconst random = require('canvas-sketch-util/random');\nconst palettes = require('nice-color-palettes/1000.json');\n\nconst sentenceGrid = (payload) => async ({ context, width, height }) => {\n  const sentence = payload.sentence.toUpperCase()\n  const count = Math.ceil(Math.sqrt(sentence.length));\n  const chars = sentence.split('');\n\n  let palette = random.pick(palettes);\n\n  palette = random.shuffle(palette);\n  palette = palette.slice(0, 3);\n  const [ bgColor, pointColor, arcColor ] = palette;\n\n  const radians = function(degrees) {\n    return degrees * Math.PI / 180;\n  };\n\n  const createGrid = () => {\n   const points = [];\n   let idx = 0;\n   for (let x = 0; x < count; x++) {\n     for (let y = 0; y < count; y++) {\n       const u = y / (count - 1);\n       const v = x / (count - 1);\n       const character = chars[idx++] || '';\n       points.push([ u, v, character ]);\n     }\n   }\n   return points;\n  };\n\n  const points = createGrid();\n\n  const fontUrl = process.env.PUBLIC_URL + '/assets/fonts/SpaceGrotesk-Bold.otf';\n  const font = new window.FontFace(\n    'SpaceGrotesk-Bold',\n    `url(${fontUrl})`\n  );\n  // We use async/await ES6 syntax to wait for the font to load\n  await font.load();\n\n  // Add the loaded font to the document\n  document.fonts.add(font);\n\n\n  const margin = width * 0.175;\n\n  context.fillStyle = bgColor;\n  context.fillRect(0, 0, width, height);\n\n  points.forEach(([ u, v, character ]) => {\n    const x = lerp(margin, width - margin, u);\n    const y = lerp(margin, height - margin, v);\n\n    const startingAngle = random.pick([0, 90, 180, 270])\n    context.beginPath();\n    context.arc(x, y, 80, radians(startingAngle), radians(startingAngle+270));\n    context.strokeStyle = pointColor;\n    context.lineWidth = 40;\n    context.stroke();\n\n    context.beginPath();\n    context.arc(x, y, 80, radians(startingAngle+270), radians(startingAngle));\n    context.strokeStyle = arcColor;\n    context.lineWidth = 40;\n    context.stroke();\n\n    context.fillStyle = arcColor;\n    context.font = `80px \"SpaceGrotesk-Bold\"`;\n    context.textAlign = 'center';\n    context.textBaseline = 'middle';\n    context.fillText(character, x, y+5);\n  });\n};\n\nexport const sentenceGridSketchMeta = {\n  title: 'Sentence Grid',\n  fileName: 'sentenceGrid.js',\n  renderer: sentenceGrid,\n  showRefresh: true,\n  payload: {\n    sentence: 'Well, have you heard the great news?'\n  }\n};\n","import { NUMERIC_RANGE } from '../../globals/payloadFieldTypes';\n\nconst { lerp } = require('canvas-sketch-util/math');\nconst random = require('canvas-sketch-util/random');\nconst palettes = require('nice-color-palettes/1000.json');\n\nrandom.setSeed(random.getRandomSeed());\n\nconst generativeWallDrawing = ({ gridSize }) => ({ context, width, height }) => {\n\n  const palette = random.pick(palettes)\n\n  const createGrid = () => {\n   const points = [];\n   for (let x = 0; x < gridSize; x++) {\n     for (let y = 0; y < gridSize; y++) {\n       const u = x / (gridSize - 1);\n       const v = y / (gridSize - 1);\n       points.push([ u, v ]);\n     }\n   }\n   return points;\n  };\n\n  const points = createGrid();\n\n  const createTuples = (points) => {\n    const result = []\n    const shuffled = random.shuffle(points);\n    while(shuffled.length > 2) {\n      const t = shuffled.splice(0, 2)\n      const avg = (t[0][1] + t[1][1] / 2);\n      result.push({\n        tuple: t,\n        avg\n      })\n    }\n    return result;\n  }\n\n  const tuples = createTuples(points).sort((a, b) => a.avg - b.avg);\n\n  const margin = 0;\n  const bgColor = 'white';\n\n  context.fillStyle = bgColor;\n  context.fillRect(0, 0, width, height);\n\n  context.strokeStyle = bgColor;\n  context.lineWidth = 40;\n\n  tuples.forEach(({ tuple }) => {\n\n    const [ u0, v0 ] = tuple[0]\n    const [ u1, v1 ] = tuple[1]\n\n    const x0 = lerp(margin, width - margin, u0);\n    const y0 = lerp(margin, height - margin, v0);\n\n    const x1 = lerp(margin, width - margin, u1);\n    const y1 = lerp(margin, height - margin, v1);\n\n    context.beginPath();\n    context.moveTo(x0,y0);\n    context.lineTo(x1,y1);\n    context.lineTo(x1,height);\n    context.lineTo(x0,height);\n    context.lineTo(x0,y0);\n    context.fillStyle = random.pick(palette);\n    context.closePath();\n    context.stroke();\n    context.fill()\n  });\n};\n\nexport const generativeWallDrawingSketchMeta = {\n  title: 'Generative Wall Drawing',\n  fileName: 'generativeWallDrawing.js',\n  renderer: generativeWallDrawing,\n  showRefresh: true,\n  payload: {\n    gridSize: 20\n  },\n  payloadSchema: [{\n    field: 'gridSize',\n    label: 'Grid size',\n    defaultValue: 10,\n    type: NUMERIC_RANGE,\n    min: 5,\n    max: 100,\n    step: 5\n  }]\n};\n","import CanvasSketchWrapper from './components/sketchWrapper/canvasSketchWrapper';\n\nimport AboutPage from './components/pages/aboutPage';\n\nimport { simpleGridSketchMeta } from './renderers/examples/simpleGrid';\nimport { randomGridSketchMeta } from './renderers/examples/randomGrid';\nimport { randomColorSizeGridSketchMeta } from './renderers/examples/randomColorSizeGrid';\nimport { randomKonamiGridSketchMeta } from './renderers/examples/randomKonamiGrid';\nimport { randomGridPaintingSketchMeta } from './renderers/examples/randomGridPainting';\n\nimport { sentenceGridSketchMeta } from './renderers/experiments/sentenceGrid';\nimport { generativeWallDrawingSketchMeta } from './renderers/experiments/generativeWallDrawing';\n\nexport const headSections = [{\n  title: 'About',\n  component: AboutPage\n}];\n\nexport const examples = [{\n  ...simpleGridSketchMeta,\n  component: CanvasSketchWrapper,\n}, {\n  ...randomGridSketchMeta,\n  component: CanvasSketchWrapper,\n}, {\n  ...randomColorSizeGridSketchMeta,\n  component: CanvasSketchWrapper,\n}, {\n  ...randomKonamiGridSketchMeta,\n  component: CanvasSketchWrapper,\n}, {\n  ...randomGridPaintingSketchMeta,\n  component: CanvasSketchWrapper,\n}];\n\nexport const experiments = [{\n  ...sentenceGridSketchMeta,\n  component: CanvasSketchWrapper,\n}, {\n  ...generativeWallDrawingSketchMeta,\n  component: CanvasSketchWrapper,\n}];\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n  CssBaseline,\n} from '@material-ui/core';\n\nimport SideMenu from './components/sideMenu';\nimport SiteHeader from './components/siteHeader';\nimport SketchPage from './components/pages/sketchPage';\n\nimport {\n  headSections,\n  examples,\n  experiments,\n} from './playgroundContent';\n\nfunction App() {\n\n  const classes = useStyles();\n\n  const [ selectedSection, setSelectedSection ] = useState(headSections[0].title);\n\n  const [ selectedIndex, setSelectedIndex ] = React.useState(0);\n\n  const [ drawerOpen, setDrawerOpen ] = React.useState(false);\n\n  function handleTabChange(event, newValue) {\n    setSelectedIndex(newValue);\n  }\n\n  return (\n\n    <div className={classes.root}>\n      <CssBaseline />\n      <SiteHeader\n        title=\"Creative Coding playground\"\n        onMenuIconClick={() => setDrawerOpen(true)}\n      />\n      <SideMenu\n        open={drawerOpen}\n        selected={selectedSection}\n        headSections={headSections}\n        examples={examples}\n        experiments={experiments}\n        onOverlayClick={() => setDrawerOpen(false)}\n        onSelect={(title) => {\n          setSelectedIndex(0);\n          setSelectedSection(title)\n          setDrawerOpen(false)\n        }}\n      />\n\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n\n        {headSections\n          .filter(({ title }) => title === selectedSection)\n          .map(\n            ({ component }, index) => {\n              return React.createElement(component, { key: index });\n            }\n          )}\n\n        {examples\n          .filter(({ title }) => title === selectedSection)\n          .map(\n            (sketchMeta, index) => {\n\n              return <SketchPage\n                sketchMeta={sketchMeta}\n                value={selectedIndex}\n                handleTabChange={handleTabChange}\n                key={index}\n              />\n\n            })\n          }\n\n          {experiments\n            .filter(({ title }) => title === selectedSection)\n            .map(\n              (sketchMeta, index) => {\n\n                return <SketchPage\n                  sketchMeta={sketchMeta}\n                  value={selectedIndex}\n                  handleTabChange={handleTabChange}\n                  key={index}\n                />\n\n              })\n            }\n\n      </main>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  toolbar: theme.mixins.toolbar,\n}));\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n// TODO https://realfavicongenerator.net/\n"],"sourceRoot":""}